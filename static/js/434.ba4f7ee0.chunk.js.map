{"version":3,"file":"static/js/434.ba4f7ee0.chunk.js","mappings":"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","sources":["components/cards/ProjectCard.jsx","components/sections/Projects.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst Card = styled.div`\n  width: ${({ isExpanded }) => (isExpanded ? \"90%\" : \"330px\")};\n  height: ${({ isExpanded }) => (isExpanded ? \"auto\" : \"490px\")};\n  background-color: ${({ theme }) => theme.card};\n  cursor: pointer;\n  border-radius: 10px;\n  box-shadow: 0 0 12px 4px rgba(0, 0, 0, 0.4);\n  overflow: hidden;\n  padding: 26px 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  transition: all 0.5s ease-in-out;\n  &:hover {\n    transform: ${({ isExpanded }) => (isExpanded ? \"none\" : \"translateY(-10px)\")};\n    box-shadow: 0 0 50px 4px rgba(0, 0, 0, 0.6);\n    filter: ${({ isExpanded }) => (isExpanded ? \"none\" : \"brightness(1.1)\")};\n  }\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: ${({ isExpanded }) => (isExpanded ? \"auto\" : \"180px\")};\n  background-color: ${({ theme }) => theme.white};\n  border-radius: 10px;\n  box-shadow: 0 0 16px 2px rgba(0, 0, 0, 0.3);\n`;\n\nconst Tags = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 8px;\n  margin-top: 4px;\n`;\n\nconst Tag = styled.span`\n  background-color: ${({ theme }) => theme.primary};\n  color: ${({ theme }) => theme.text_on_primary};\n  padding: 4px 8px;\n  border-radius: 5px;\n  font-size: 12px;\n`;\n\nconst Details = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 0px;\n  padding: 0px 2px;\n`;\n\nconst Title = styled.div`\n  font-size: 20px;\n  font-weight: 600;\n  color: ${({ theme }) => theme.text_secondary};\n  overflow: hidden;\n  display: -webkit-box;\n  max-width: 100%;\n  -webkit-line-clamp: ${({ isExpanded }) => (isExpanded ? \"none\" : 2)};\n  -webkit-box-orient: vertical;\n  text-overflow: ellipsis;\n`;\n\nconst Description = styled.div`\n  font-weight: 400;\n  color: ${({ theme }) => theme.text_secondary + 99};\n  overflow: hidden;\n  margin-top: 8px;\n  display: -webkit-box;\n  max-width: 100%;\n  -webkit-line-clamp: ${({ isExpanded }) => (isExpanded ? \"none\" : 3)};\n  -webkit-box-orient: vertical;\n  text-overflow: ellipsis;\n`;\n\nconst Button = styled.a`\n  color: ${({ theme }) => theme.primary};\n  text-decoration: none;\n  font-weight: 600;\n  text-align: center;\n  margin-top: 10px;\n`;\n\nconst CloseButton = styled.button`\n  background-color: ${({ theme }) => theme.primary};\n  color: ${({ theme }) => theme.text_on_primary};\n  border: none;\n  padding: 8px 16px;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-top: 12px;\n  align-self: flex-end;\n`;\n\nconst ProjectCard = ({ project }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const handleExpandClick = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  return (\n    <Card isExpanded={isExpanded} onClick={handleExpandClick}>\n      <Image src={project.image} alt={project.title} isExpanded={isExpanded} />\n      <Details>\n        <Title isExpanded={isExpanded}>{project.title}</Title>\n        <Description isExpanded={isExpanded}>{project.description}</Description>\n      </Details>\n      <Tags>\n        {project.tags?.map((tag, index) => (\n          <Tag key={index}>{tag}</Tag>\n        ))}\n      </Tags>\n      <Button href={project.github} target=\"_blank\">\n        Click Here\n      </Button>\n      {isExpanded && (\n        <CloseButton onClick={handleExpandClick}>Close</CloseButton>\n      )}\n    </Card>\n  );\n};\n\nexport default ProjectCard;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { projects } from \"../../data/constants\";\nimport ProjectCard from \"../cards/ProjectCard\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-contnet: center;\n  margin-top: 50px;\n  padding: 0px 16px;\n  position: rlative;\n  z-index: 1;\n  align-items: center;\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  max-width: 1100px;\n  gap: 12px;\n  @media (max-width: 960px) {\n    flex-direction: column;\n  }\n`;\nconst Title = styled.div`\n  font-size: 52px;\n  text-align: center;\n  font-weight: 600;\n  margin-top: 20px;\n  color: ${({ theme }) => theme.text_primary};\n  @media (max-width: 768px) {\n    margin-top: 12px;\n    font-size: 32px;\n  }\n`;\nconst Desc = styled.div`\n  font-size: 18px;\n  text-align: center;\n  font-weight: 600;\n  color: ${({ theme }) => theme.text_secondary};\n  @media (max-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nconst ToggleButtonGroup = styled.div`\n  display: flex;\n  border: 1.5px solid ${({ theme }) => theme.primary};\n  color: ${({ theme }) => theme.primary};\n  font-size: 16px;\n  border-radius: 12px;\nfont-weight 500;\nmargin: 22px 0;\n@media (max-width: 768px){\n    font-size: 12px;\n}\n`;\nconst ToggleButton = styled.div`\n  padding: 8px 18px;\n  border-radius: 6px;\n  cursor: pointer;\n  &:hover {\n    background: ${({ theme }) => theme.primary + 20};\n  }\n  @media (max-width: 768px) {\n    padding: 6px 8px;\n    border-radius: 4px;\n  }\n  ${({ active, theme }) =>\n        active &&\n        `\n  background:  ${theme.primary + 20};\n  `}\n`;\nconst Divider = styled.div`\n  width: 1.5px;\n  background: ${({ theme }) => theme.primary};\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 28px;\n  flex-wrap: wrap;\n`;\n\nconst Projects = () => {\n    const [toggle, setToggle] = useState(\"all\");\n    return (\n        <Container id=\"Projects\">\n            <Wrapper>\n                <Title>Projects</Title>\n                <Desc\n                    style={{\n                        marginBottom: \"40px\",\n                    }}\n                >\n                    I've worked on a variety of projects, from web apps to Android apps, each aimed at solving real-world challenges. Here are some highlights.\n                </Desc>\n\n                <ToggleButtonGroup>\n                    <ToggleButton\n                        active={toggle === \"all\"}\n                        onClick={() => setToggle(\"all\")}\n                    >\n                        ALL\n                    </ToggleButton>\n                    <Divider />\n                    <ToggleButton\n                        active={toggle === \"web app\"}\n                        onClick={() => setToggle(\"web app\")}\n                    >\n                        Internship Projects\n                    </ToggleButton>\n                    <Divider />\n                    <ToggleButton\n                        active={toggle === \"android app\"}\n                        onClick={() => setToggle(\"android app\")}\n                    >\n                        My Projects\n                    </ToggleButton>\n                    <Divider />\n                    <ToggleButton\n                        active={toggle === \"machine learning\"}\n                        onClick={() => setToggle(\"machine learning\")}\n                    >\n                        MACHINE LEARNING\n                    </ToggleButton>\n                </ToggleButtonGroup>\n\n                <CardContainer>\n                    {toggle === \"all\" &&\n                        projects.map((project) => <ProjectCard project={project} />)}\n                    {projects\n                        .filter((item) => item.category === toggle)\n                        .map((project) => (\n                            <ProjectCard project={project} />\n                        ))}\n                </CardContainer>\n            </Wrapper>\n            <br /><br />\n        </Container>\n    );\n};\n\nexport default Projects;\n"],"names":["Card","styled","div","_ref","isExpanded","_ref2","_ref3","theme","card","_ref4","_ref5","Image","img","_ref6","_ref7","white","Tags","Tag","span","_ref8","primary","_ref9","text_on_primary","Details","Title","_ref10","text_secondary","_ref11","Description","_ref12","_ref13","Button","a","_ref14","CloseButton","button","_ref15","_ref16","_ref17","_project$tags","project","setIsExpanded","useState","handleExpandClick","_jsxs","onClick","children","_jsx","src","image","alt","title","description","tags","map","tag","index","href","github","target","Container","Wrapper","text_primary","Desc","ToggleButtonGroup","ToggleButton","active","Divider","CardContainer","Projects","toggle","setToggle","id","style","marginBottom","projects","ProjectCard","filter","item","category"],"sourceRoot":""}